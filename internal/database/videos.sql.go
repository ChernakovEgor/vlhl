// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: videos.sql

package database

import (
	"context"
)

const newVideo = `-- name: NewVideo :one
INSERT INTO video(name, uploaded)
     VALUES (?, ?)
  RETURNING id, name, uploaded
`

type NewVideoParams struct {
	Name     string
	Uploaded string
}

func (q *Queries) NewVideo(ctx context.Context, arg NewVideoParams) (Video, error) {
	row := q.db.QueryRowContext(ctx, newVideo, arg.Name, arg.Uploaded)
	var i Video
	err := row.Scan(&i.ID, &i.Name, &i.Uploaded)
	return i, err
}

const ping = `-- name: Ping :one
SELECT 1
`

func (q *Queries) Ping(ctx context.Context) (int64, error) {
	row := q.db.QueryRowContext(ctx, ping)
	var column_1 int64
	err := row.Scan(&column_1)
	return column_1, err
}
